import{_ as o,r as n,o as i,c as l,a as t,b as d,d as a,e}from"./app-8514ec6b.js";const c={},h=e('<h1 id="纹理包" tabindex="-1"><a class="header-anchor" href="#纹理包" aria-hidden="true">#</a> 纹理包</h1><h2 id="分辨率" tabindex="-1"><a class="header-anchor" href="#分辨率" aria-hidden="true">#</a> 分辨率</h2><p>很多玩家不清楚纹理包名中附带的 <code>32x</code> 、 <code>1024X</code> 、 <code>2k</code> 等参数的含义。这里我们稍作解释：</p><ul><li><p><code>x</code> 为像素（px）的缩写。</p><ul><li>像素为显示器的单位长度。</li><li>日常接触到的 <code>1080p</code> 即为 <code>1920*1080</code> 个像素大小；</li></ul></li><li><p>前面附带的数字 <code>32</code> 为纹理包中<strong>所有贴图</strong>的统一尺寸。</p><ul><li><code>1024x</code> 表示该纹理包的所有贴图均为 <code>1024*1024</code> 像素尺寸。</li><li>以此类推，<code>2k</code> 表示所有贴图均为 <code>2048*2048</code> 像素的尺寸。</li></ul></li></ul><h2 id="游戏版本兼容" tabindex="-1"><a class="header-anchor" href="#游戏版本兼容" aria-hidden="true">#</a> 游戏版本兼容</h2><h3 id="主要的兼容范围" tabindex="-1"><a class="header-anchor" href="#主要的兼容范围" aria-hidden="true">#</a> 主要的兼容范围</h3><p>总体来说，纹理包的版本主要分为两段区间：</p><table><thead><tr><th>游戏版本区间</th><th>-</th></tr></thead><tbody><tr><td>1.9 - 1.12.2</td><td>旧纹理包最后支持的区间</td></tr><tr><td>1.13 - 最新版</td><td>新纹理包主要支持的区间</td></tr></tbody></table><ul><li><p>对于大部分国内的纹理包，只需要选择在 <strong>两个区间内</strong> 的 <code>任意一个版本</code> ，即可正常加载纹理包。</p></li><li><p>究其原因，是 mojang 在 1.13 开始进行了扁平化更新，导致大量贴图的模型与旧版不同，强行加载会导致兼容问题。</p></li></ul><h3 id="客户端内仍然提示不兼容" tabindex="-1"><a class="header-anchor" href="#客户端内仍然提示不兼容" aria-hidden="true">#</a> 客户端内仍然提示不兼容</h3><p>可能有些玩家会疑惑，很多时候游戏版本在正确的区间内，但加载时仍然会标红且提示 <code>该版本不兼容</code>。</p><p>这是因为实际上纹理包的区间每 <code>2 - 3</code> 个版本分为一段。</p><p>这在纹理包内一个名为 <code>pack.mcmeta</code> 的文件内，由 <code>pack_format: 数字</code> 标注。以下是数字与支持版本的表格：</p><table><thead><tr><th>pack_format</th><th>具体支持的版本</th></tr></thead><tbody><tr><td>2</td><td>1.8 - 1.8.9</td></tr><tr><td>3</td><td>1.9 - 1.12.2</td></tr><tr><td>4</td><td>1.13 - 1.14.4</td></tr><tr><td>5</td><td>1.15 - 1.16.5</td></tr><tr><td>6</td><td>1.17 - 1.18.2</td></tr><tr><td>7</td><td>1.19 - 1.20</td></tr><tr><td>...</td><td>...</td></tr></tbody></table><h2 id="原版贴图" tabindex="-1"><a class="header-anchor" href="#原版贴图" aria-hidden="true">#</a> 原版贴图</h2><p><strong>原版贴图名称一般为 xxx.png。</strong></p><p>原版贴图由 Minecraft 原生提供支持，在所有贴图中消耗性能最少。许多老材质包如 <strong>舒服细致、五边形</strong> 等即为只提供原版贴图的纹理包。</p><h2 id="特殊贴图" tabindex="-1"><a class="header-anchor" href="#特殊贴图" aria-hidden="true">#</a> 特殊贴图</h2><p>特殊贴图主要分为以下几种：高光贴图、视差贴图与 PBR 贴图。其中，</p><ul><li>前两者均为法线贴图的形式，实际文件名称一般为 <code>xxx_n.png</code> ；</li><li>PBR 贴图文件名称为 <code>xxx_s.png</code>。</li></ul><p>需要注意的是，以上三种特殊贴图依赖 <code>OptiFine</code> 、 <code>Iris</code> 等 API 支持。</p><p>OptiFine 同时支持一些其它的特殊贴图，如 CTM 、 CIT 、 CEM 等。简述可见下方 <a href="#%E5%85%B6%E5%AE%83%E7%89%B9%E6%AE%8A%E8%B4%B4%E5%9B%BE">其它特殊贴图</a></p><h3 id="高光-法线-贴图" tabindex="-1"><a class="header-anchor" href="#高光-法线-贴图" aria-hidden="true">#</a> 高光（法线）贴图</h3><p>在原纹理的凹凸表面的每个点上均作法线，通过 RGB 颜色通道来标记法线的方向，可以在纹理表面产生高细节程度的精确光照方向和反射效果；</p><h3 id="视差-法线-贴图" tabindex="-1"><a class="header-anchor" href="#视差-法线-贴图" aria-hidden="true">#</a> 视差（法线）贴图</h3><p>主要用于表现物体表面大幅度的高度变化，增加纹理的立体感。其通过人眼的视觉差达成，因此得名视差。所以<strong>视差并不是真正的 3D，模型才是。</strong> 在 Minecraft 中，视差绘制为在法线贴图上的 Alpha 通道，越透明代表高度越低。</p><h3 id="pbr贴图" tabindex="-1"><a class="header-anchor" href="#pbr贴图" aria-hidden="true">#</a> PBR贴图</h3><p>PBR（基于物理的渲染，Physics Based Render）渲染体系由光影提供渲染，纹理包提供纹理信息来表现纹理表面的物理性质（高度、光滑、金属、孔隙、环境光遮蔽、次表面散射、发光等特性）。分为法线与视差、PBR两部分，均为单独的贴图，通过不同的颜色来决定性质渲染。</p><p>PBR 贴图可以通过绘制不同的颜色来表现纹理的物理特性，同时可以与法线和视差互相交互，分出不同的层次细节，来达到更惊艳的效果。</p><h3 id="pbr标准" tabindex="-1"><a class="header-anchor" href="#pbr标准" aria-hidden="true">#</a> PBR标准</h3><p>PBR 有着不同的标准，例如 OldPBR 、 LabPBR 、四合一等。</p>',31),s=t("p",null,[d("JE 社区最适用的是 "),t("code",null,"LabPBR"),d(" 。其中，")],-1),p=e("<li><code>R</code> 通道代表<strong>光滑度</strong>；</li><li><code>G</code> 通道代表<strong>金属度</strong>，一些特殊数值代表指定金属；</li><li><code>B</code> 通道代表<strong>环境光遮蔽/孔隙度（不常用）、次表面散射</strong>，</li><li><code>A</code> 通道代表<strong>自发光</strong>，<code>[0,254]</code> 范围内数值越大发光越强。</li><li>通过混合这些颜色通道可以表现出多彩多样的方块物理性质。</li>",5),u={href:"https://wiki.shaderlabs.org/wiki/Category:LabPBR",target:"_blank",rel:"noopener noreferrer"},b=t("li",null,[t("p",null,[d("BE 最适用的是 "),t("code",null,"四合一"),d(" 。")]),t("ul",null,[t("li",null,[d("主要为将"),t("strong",null,"主贴图、法线贴图、PBR贴图"),d("，再附上"),t("strong",null,"单独的检测贴图"),d("拼合到一张图内，得以实现光影读取。")]),t("li",null,[t("strong",null,"四合一标准请见BE光影：YSS 压缩包内部的开发文档。")])])],-1),x=e('<h3 id="其它特殊贴图" tabindex="-1"><a class="header-anchor" href="#其它特殊贴图" aria-hidden="true">#</a> 其它特殊贴图</h3><table><thead><tr><th>缩写</th><th>全称</th><th>作用</th></tr></thead><tbody><tr><td>CTM</td><td>Connected Textures Model</td><td>方块间的纹理连接</td></tr><tr><td>CIT</td><td>Custom Item Textures</td><td>自定义物品纹理</td></tr><tr><td>CEM</td><td>Custom Entity Models</td><td>自定义实体模型</td></tr><tr><td>Animation</td><td>-</td><td>自定义动态纹理</td></tr><tr><td>GUI</td><td>-</td><td>自定义游戏界面</td></tr><tr><td>-</td><td>Emissive Textures</td><td>自发光纹理</td></tr><tr><td>-</td><td>Random Entities</td><td>随机实体纹理</td></tr><tr><td>-</td><td>Natural Textures</td><td>自然纹理</td></tr><tr><td>-</td><td>Custom Sky</td><td>自定义天空</td></tr><tr><td>...</td><td>...</td><td>...</td></tr></tbody></table>',2),_={href:"http://sqwatermark.com/resguide/optifinedoc/",target:"_blank",rel:"noopener noreferrer"};function g(B,f){const r=n("ExternalLinkIcon");return i(),l("div",null,[h,t("ul",null,[t("li",null,[s,t("ul",null,[p,t("li",null,[d("关于 LabPBR 的更多详细介绍，可参考该文档："),t("a",u,[d("Category:LabPBR"),a(r)])])])]),b]),x,t("p",null,[d("详细介绍可参考 MCBBS 纹理版版主 SQwatermark 的教程："),t("a",_,[d("OptiFine文档"),a(r)])])])}const E=o(c,[["render",g],["__file","resourcepacks.html.vue"]]);export{E as default};
