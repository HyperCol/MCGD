import{_ as d,r,o as i,c,a as e,b as n,d as o,w as s,f as a,e as u}from"./app-hXC44YBb.js";const h={},_=e("h1",{id:"着色器-基本概念",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#着色器-基本概念","aria-hidden":"true"},"#"),n(" 着色器 基本概念")],-1),p=e("div",{class:"custom-container warning"},[e("p",{class:"custom-container-title"},"施工中"),e("p",null,"这篇文章还未重写完毕，可能无法流畅阅读。")],-1),f=e("h2",{id:"何谓着色器",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#何谓着色器","aria-hidden":"true"},"#"),n(" 何谓着色器？")],-1),g=e("em",null,"Vulkan",-1),b=e("em",null,"DirectX",-1),m=e("strong",null,"手段",-1),E=e("br",null,null,-1),k=e("h2",{id:"渲染模组-je",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#渲染模组-je","aria-hidden":"true"},"#"),n(" 渲染模组 "),e("sup",null,"JE")],-1),x=e("h3",{id:"流行模组",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#流行模组","aria-hidden":"true"},"#"),n(" 流行模组")],-1),B=e("code",null,"OptiFine",-1),C={href:"https://www.optifine.net/home",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"Iris",-1),v=e("code",null,"OptiFine",-1),w=e("code",null,"Forge",-1),M=e("code",null,"Oculus",-1),F={href:"https://irisshaders.net/",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"Canvas",-1),O=e("code",null,"Fabric API",-1),A={href:"https://github.com/vram-guild/canvas",target:"_blank",rel:"noopener noreferrer"},D=e("h3",{id:"其他模组",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#其他模组","aria-hidden":"true"},"#"),n(" 其他模组")],-1),S=e("code",null,"Blaze4D",-1),G=e("code",null,"Vulkan",-1),I=e("code",null,"Vulkan",-1),N={href:"https://github.com/KilnGraphics/Blaze4D",target:"_blank",rel:"noopener noreferrer"},H=e("code",null,"Focal Engine",-1),J=e("code",null,"Continuum",-1),R=e("code",null,"OptiFine",-1),X=e("code",null,"Vulkan",-1),y={href:"https://continuum.graphics/",target:"_blank",rel:"noopener noreferrer"},z=e("code",null,"Vulkan Mod",-1),T=e("code",null,"Vulkan",-1),j={href:"https://github.com/xCollateral/VulkanMod",target:"_blank",rel:"noopener noreferrer"},P=e("h3",{id:"辅助模组",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#辅助模组","aria-hidden":"true"},"#"),n(" 辅助模组")],-1),W=e("code",null,"AdvancedShader",-1),K=e("code",null,"OptiFine",-1),q=e("code",null,"1.12.2",-1),Q=e("strong",null,"仅在更高版本中可用",-1),U={href:"https://www.mcmod.cn/class/7814.html",target:"_blank",rel:"noopener noreferrer"},Y=u('<h2 id="渲染龙和它的光影朋友们-be" tabindex="-1"><a class="header-anchor" href="#渲染龙和它的光影朋友们-be" aria-hidden="true">#</a> 渲染龙和它的光影朋友们 <sup>BE</sup></h2><ul><li><strong>首先明确一个概念： <code>光影属于着色器</code> 。无论是哪个 MC 版本，两者都没有明确的分界线。</strong> 基岩版光影基于 Opengl ES 中的 GLSL 或 HLSL 。由于接口限制，基岩版光影可以实现的效果非常少，但仍可以通过一系列稀奇古怪的方法实现物理渲染体系。</li><li><strong>什么是接口（API）？</strong> 简单来说，需要游戏有 <code>对应接口</code> 才能接入对应算法。具象化来说，这就好比给手机（游戏本体）扩展存储（想要达到的光影效果），需要 <code>SD 卡（算法）</code>，并且手机需要有 <code>SD 卡槽（接口）</code> 才能插入。</li><li><strong>能否自己加接口？</strong> 基岩版基于 <code>C++</code> ，反编译（可以获取到游戏源码，JE的模组接口就是靠的这种方法）极其困难，几乎不可能实现。</li><li><strong>渲染龙引擎是微软官方在 BE 实装的渲染引擎</strong>。目前，渲染龙已覆盖到了 <code>Windows</code> 、<code>Xbox</code> 、<code>Android</code> 等多平台的基岩版 Minecraft 上，替代了原本第三方着色器的渲染方案。理想情况下，Windows版本能够通过调用 <code>RTX</code> 或 <code>RX 6000 及以上</code> 系列显卡的光线追踪加速单元以提升光线追踪的效率，而其他平台上的引擎能够起到优化作用。<s>意外的是，渲染龙一开始是给 Java 版 Minecraft 设计的，而且渲染龙目前只起到了负优化作用。</s></li><li><strong>渲染龙的引入并不一定是积极的</strong>。 <ul><li>渲染龙目前在多个平台上表现为负优化，例如操作、渲染延迟等，且帧数并不一定有提升。</li><li>渲染龙的算法加密破坏了很多东西，除了光影还有例如 <code>区块显示</code>、<code>红石能量显示</code>、<code>亮度显示</code>、<code>夜视</code>、<code>透视</code>、<code>小地图</code> 等，这些原本都能由第三方光影实现。而它们的消失给一些玩家带来了不少困扰。</li><li>官方的光追光影虽然在光追方面技术力高，但其在细节调校方面做的并不如人意，也对主打真实风格的地图与材质作者造成了很大困扰，并且在手机版直接导致了第三方光影集体灭绝。</li><li>这也是我们目前为什么反对渲染龙的原因，在此希望大家可以<strong>理性看待渲染龙，而非一味吹捧。</strong></li></ul></li><li>2022 下半年更新： 渲染龙 <strong>已被破解</strong> ，但由于破解团队收到微软的 DMCA 致函（你可以理解为类似律师函，但只是警告），以及新的光影编写方法过于麻烦（需反编译后编辑，再回编译后放到固定文件夹替换相关文件，重启游戏），目前 BE 光影仍然<strong>沉寂</strong>。</li></ul><h3 id="网易提供的延迟处理接口-be-ne" tabindex="-1"><a class="header-anchor" href="#网易提供的延迟处理接口-be-ne" aria-hidden="true">#</a> 网易提供的延迟处理接口 <sup>BE(NE)</sup></h3><hr><p>扩展阅读：</p>',5);function Z($,ee){const t=r("RouterLink"),l=r("ExternalLinkIcon");return i(),c("div",null,[_,e("p",null,[n("参阅："),o(t,{to:"/library/terms.html#%E6%B8%B2%E6%9F%93%E6%A8%A1%E7%BB%84%E5%92%8C%E5%BC%95%E6%93%8E"},{default:s(()=>[n("渲染模组和引擎")]),_:1})]),p,a(`
重写大纲

什么是着色器
渲染模组和引擎在运行光影中扮演的角色
光影包和着色器的关系
光影是如何在MC中运作的

附录：
JE渲染模组和引擎
BE渲染引擎
`),f,e("p",null,[n("对于一个完整的现代图形应用程序（例如 "),o(t,{to:"/library/terms.html#opengl"},{default:s(()=>[n("OpenGL")]),_:1}),n("　、"),g,n("、"),b,n("等）来说，着色器是它渲染场景的"),m,n("。"),E,n(" 我们知道图形应用程序的目的是读取模型文件或硬编码几何体，并在屏幕上绘制。着色器就描述了我们传入的几何体以何种方式在屏幕上的何种位置绘制。")]),k,x,e("ul",null,[e("li",null,[B,n(" 是目前主流的光影模组。 "),e("ul",null,[e("li",null,[e("a",C,[n("OptiFine 主页"),o(l)])])])]),e("li",null,[V,n(" 是 "),v,n(" 的衍生和替代品，其还包含一个 "),w,n(" 分支 "),M,n(" 。 "),e("ul",null,[e("li",null,[e("a",F,[n("Iris 主页"),o(l)])])])]),e("li",null,[L,n(" 是一个通过兼容原版着色器和深度兼容 "),O,n(" 的光影模组，兼容性极强。 "),e("ul",null,[e("li",null,[e("a",A,[n("Canvas 的 GitHub 页面"),o(l)])])])])]),D,e("ul",null,[e("li",null,[S,n(" 是一个使用 "),G,n(" 实验性项目，主要目标是在 "),I,n(" 上实现光影渲染。 "),e("ul",null,[e("li",null,[e("a",N,[n("Blaze4D 的 GitHub 页面"),o(l)])])])]),e("li",null,[H,n(" 由 "),J,n(" 团队编写，目前是一个 "),R,n(" 增强模组，并为自己的产品提供加密和联网验证保护，目标是作为独立的渲染模组在 "),X,n(" 上实现光影渲染。 "),e("ul",null,[e("li",null,[e("a",y,[n("Continuum Graphics 主页"),o(l)])])])]),e("li",null,[z,n(" 是一个将 MC 的渲染接口换为 "),T,n(" ，借此提高帧数。目前存在较多bug与兼容性问题，并不支持光影。 "),e("ul",null,[e("li",null,[e("a",j,[n("Vulkan Mod 的 GitHub 页面"),o(l)])])])])]),P,e("ul",null,[e("li",null,[W,n(" 是一个 "),K,n(" 的辅助模组，仅在 "),q,n(" 可用。它能够允许用户使用"),Q,n("的着色器（如 iterationT 3.0.0）。 "),e("ul",null,[e("li",null,[e("a",U,[n("AdvancedShader 的 MCMOD 页面"),o(l)])])])])]),Y,e("ul",null,[e("li",null,[o(t,{to:"/library/shaders-advanced.html"},{default:s(()=>[n("着色器 技术科普")]),_:1})])])])}const oe=d(h,[["render",Z],["__file","shaders.html.vue"]]);export{oe as default};
