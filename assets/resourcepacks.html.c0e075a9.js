import{_ as a,o as r,c as e,e as n}from"./app.05bdcae3.js";const s={},t=n('<h1 id="纹理包" tabindex="-1"><a class="header-anchor" href="#纹理包" aria-hidden="true">#</a> 纹理包</h1><h2 id="光影与纹理联系的纽带——pbr材质" tabindex="-1"><a class="header-anchor" href="#光影与纹理联系的纽带——pbr材质" aria-hidden="true">#</a> 光影与纹理联系的纽带——PBR材质</h2><p>PBR（基于物理的渲染，Physics Based Render）渲染体系由光影提供渲染，纹理包提供纹理信息来表现纹理表面的物理性质（高度、光滑、金属、孔隙、环境光遮蔽、次表面散射、发光等特性）。分为法线与视差、PBR两部分，均为单独的贴图，通过不同的颜色来决定性质渲染。</p><h3 id="法线与视差" tabindex="-1"><a class="header-anchor" href="#法线与视差" aria-hidden="true">#</a> 法线与视差</h3><p><strong>法线贴图名称一般为 xxx_n.png。</strong></p><p><strong>法线贴图（Normal Mapping）</strong> 在原纹理的凹凸表面的每个点上均作法线，通过 RGB 颜色通道来标记法线的方向，可以在纹理表面产生高细节程度的精确光照方向和反射效果； <strong>视差贴图（Parallax Mapping）</strong> 主要表现物体表面大幅度的高度变化，来使纹理看着是立体的，但其实际是通过人眼的视觉差达成的，因此得名视差。所以<strong>视差并不是真正的3D，模型才是。</strong> 在Minecraft中，视差绘制为在法线贴图上的Alpha通道，越透明代表高度越低。</p><h3 id="pbr" tabindex="-1"><a class="header-anchor" href="#pbr" aria-hidden="true">#</a> PBR</h3><p><strong>PBR贴图名称一般为 xxx_s.png。</strong> PBR贴图可以通过绘制不同的颜色来表现纹理的物理特性，同时可以与法线和视差互相交互，分出不同的层次细节，来达到更惊艳的效果。 PBR有着不同的标准，例如 OldPBR 、 LabPBR 、四合一等。目前 JE 社区最适用的是 <strong>LabPBR</strong> 。其中 R 通道代表光滑度； G 通道代表金属度，一些特殊数值代表指定金属； B 通道代表环境光遮蔽/孔隙度（不常用）、次表面散射， A 通道代表自发光，[0,254]范围内数值越大发光越强。通过混合这些颜色通道可以表现出多彩多样的方块物理性质。 BE 最适用的是<strong>四合一</strong>，主要为将主贴图、法线贴图、PBR贴图，再附上单独的检测贴图拼合到一张图内，得以实现光影读取。 关于LabPBR：</p><p><strong>四合一标准请见BE光影：YSS 压缩包内部的开发文档。</strong></p><h2 id="模型材质" tabindex="-1"><a class="header-anchor" href="#模型材质" aria-hidden="true">#</a> 模型材质</h2><p>待补充</p>',11),o=[t];function h(d,c){return r(),e("div",null,o)}const p=a(s,[["render",h],["__file","resourcepacks.html.vue"]]);export{p as default};
